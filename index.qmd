---
title: "thesctrading"
format:
  html:
    code-fold: true
jupyter: python3
---

## My Python Code

# 1. Trading Strategy & Plan

## 🔍 Overview

> _Brief summary of your strategy in 1–2 lines._

---

## 🎯 Trade Walkthrough

### 📈 Entry Signal
- Conditions / indicators used
- Timeframe
- Asset(s) traded

### 📉 Exit Signal
- Profit target
- Stop loss logic
- Exit timing or trailing rules

---

## 🛡️ Risk Management
- Position sizing
- Stop loss logic
- Daily/weekly risk limits

---

## 💬 Instructor Feedback
> _Add notes or summaries from any instructor or TA discussions here._

---

# 2. Data Plan

## 📊 Data Requirements

- **Features Needed**:
  (e.g., price, volume, indicators, fundamentals...)

- **Frequency & Time Range**:
  (e.g., 1-minute, daily, past 1 year...)

- **Source(s)**:
  (e.g., Yahoo Finance, Alpaca API, CSV upload...)

## 💡 Notes or Open Questions

## Data Table

```{python}
from IPython.display import Markdown
from tabulate import tabulate
table = [["Sun","696,000",1.989e30],
         ["Earth","6,371",5.972e24],
         ["Moon","1,737",7.34e22],
         ["Mars","3,390",6.39e23]]
Markdown(tabulate(
  table,
  headers=["Astronomical object","R (km)", "mass (kg)"]
))
```

## Image
Test

![Caption](elephant.png)

## 📈 FRED Data: Software Developer Job Postings

```{python}
import pandas as pd
import matplotlib.pyplot as plt
from fredapi import Fred

# Connect to FRED
fred = Fred(api_key="1c00931ee7dc4304c6bb68b72fb2d68f")

# Fetch data
series_id = "IHLIDXUSTPSOFTDEVE"
data = fred.get_series(series_id)

# Convert to DataFrame
df = pd.DataFrame(data, columns=["Job Postings"])
df.index.name = "Date"
df = df.reset_index()

# Display last 5 rows as table
df.tail()
```

```{python}
# Plot the time series
plt.figure(figsize=(10, 4))
plt.plot(df["Date"], df["Job Postings"], linewidth=2)
plt.title("US Software Developer Job Postings Index")
plt.xlabel("Date")
plt.ylabel("Index Value")
plt.grid(True)
plt.tight_layout()
plt.show()
```